/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import DAO.DonHangDAO;
import DAO.FoodDAO;
import DAO.NhanVienDAO;
import DAO.ThongKeDAO;
import entity.FoodAndDrink;
import entity.NhanVien;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicTabbedPaneUI;
import javax.swing.table.DefaultTableModel;
import ulti.Auth;
import ulti.DateHelper;
import ulti.DialogHelper;
import ulti.shareHelper;

/**
 *
 * @author Thinkpad E440
 */
public class quanLyJframe extends javax.swing.JFrame {

    List<NhanVien> listNV = new ArrayList<>();
    List<FoodAndDrink> listFood = new ArrayList<>();
    NhanVienDAO daonv = new NhanVienDAO();
    FoodDAO FoodDao = new FoodDAO();
    DonHangDAO daoDH = new DonHangDAO();
    ThongKeDAO thongKeDAO = new ThongKeDAO();
    DefaultTableModel modelFoodList, modelNV;

    String imageCurrent = "";
    int row = 0;
    int rowMenu = 0;

    public quanLyJframe() {
        initComponents();
        inItTab();
        inIt();
        setLocationRelativeTo(this);
        this.setTitle("Màn hình Quản lý");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TrangThaiMonAn = new javax.swing.ButtonGroup();
        ChucVu = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnQuanLyMon = new javax.swing.JButton();
        btnTaoMon = new javax.swing.JButton();
        lblNekoIcon = new javax.swing.JLabel();
        btnQuanLyNhanVien = new javax.swing.JButton();
        tabbedTong = new javax.swing.JTabbedPane();
        tabThemMon = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblHinhAnh = new javax.swing.JLabel();
        lblThem_SuaMonAn = new javax.swing.JLabel();
        lblTitleThemMonAn = new javax.swing.JLabel();
        lblMaMon = new javax.swing.JLabel();
        txtMaMon = new javax.swing.JTextField();
        lblTenMon = new javax.swing.JLabel();
        txtTenMon = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        lblGia = new javax.swing.JLabel();
        rdoConHang = new javax.swing.JRadioButton();
        lblTrangThai = new javax.swing.JLabel();
        rdoHetHang = new javax.swing.JRadioButton();
        btnThemMonAn = new javax.swing.JButton();
        btnSuaMonAn = new javax.swing.JButton();
        tabDanhSachMon = new javax.swing.JPanel();
        lblDanhSachMonAn = new javax.swing.JLabel();
        btnXoaMon = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSachMon = new javax.swing.JTable();
        txtTimKiemMonAn = new javax.swing.JTextField();
        btnTimKiemMonAn = new javax.swing.JButton();
        lblFindMaMonAn = new javax.swing.JLabel();
        tabThemNhanVien = new javax.swing.JPanel();
        lblThem_SuaNV = new javax.swing.JLabel();
        lblMaNhanVien = new javax.swing.JLabel();
        lblMatKhau = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JTextField();
        txtMaNhanVien = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtTenNhanVien = new javax.swing.JTextField();
        lblTenNV = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        lblSdt = new javax.swing.JLabel();
        txtSoDienThoai = new javax.swing.JTextField();
        rdoQL = new javax.swing.JRadioButton();
        rdoNV = new javax.swing.JRadioButton();
        lblRole = new javax.swing.JLabel();
        btnThemNV = new javax.swing.JButton();
        btnSuaNV = new javax.swing.JButton();
        tabDanhSachNhanVien = new javax.swing.JPanel();
        lblDanhSachNV = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSachNhanVien = new javax.swing.JTable();
        btnXoaNhanVien = new javax.swing.JButton();
        lblMaNV = new javax.swing.JLabel();
        txtTimKiemNV = new javax.swing.JTextField();
        btnTimKiemNV = new javax.swing.JButton();
        tabThongKeDoanhThu = new javax.swing.JPanel();
        lblBaoCaoThongKeDoanhThu = new javax.swing.JLabel();
        cboDoanhThuNgay = new javax.swing.JComboBox<>();
        cboDoanhThuThang = new javax.swing.JComboBox<>();
        cboDoanhThuNam = new javax.swing.JComboBox<>();
        JScrollPane = new javax.swing.JScrollPane();
        tblTKDoanhThu = new javax.swing.JTable();
        btnInTKDoanhThu = new javax.swing.JButton();
        tabThongKeMonAn = new javax.swing.JPanel();
        lblBaoCaoThongKeMonAn = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTKMonAn = new javax.swing.JTable();
        cboMonAnNgay = new javax.swing.JComboBox<>();
        cboMonAnThang = new javax.swing.JComboBox<>();
        cboMonAnNam = new javax.swing.JComboBox<>();
        btnInTKMonAn = new javax.swing.JButton();
        btnTaoNhanVien = new javax.swing.JButton();
        btnDanhSachNhanVien = new javax.swing.JButton();
        btnThongKeDoanhThu = new javax.swing.JButton();
        btnBaoCaoThongKe = new javax.swing.JButton();
        btnDanhSachmon = new javax.swing.JButton();
        btnThongKeMonAn = new javax.swing.JButton();
        btnChuyenManHinh = new javax.swing.JButton();
        btnDangXuat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnQuanLyMon.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnQuanLyMon.setText("Quản lý món ăn");
        btnQuanLyMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLyMonActionPerformed(evt);
            }
        });

        btnTaoMon.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTaoMon.setText("Thêm/Sửa món");
        btnTaoMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMonActionPerformed(evt);
            }
        });

        lblNekoIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo_brand.png"))); // NOI18N

        btnQuanLyNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnQuanLyNhanVien.setText("Quản lý nhân viên");
        btnQuanLyNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLyNhanVienActionPerformed(evt);
            }
        });

        tabbedTong.setBackground(new java.awt.Color(153, 153, 255));
        tabbedTong.setEnabled(false);

        tabThemMon.setBackground(new java.awt.Color(255, 255, 255));
        tabThemMon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblHinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhAnhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );

        lblThem_SuaMonAn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblThem_SuaMonAn.setText("Thêm /sửa món ăn");

        lblTitleThemMonAn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTitleThemMonAn.setText("Thêm món ăn");

        lblMaMon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMaMon.setText("Mã món ");

        lblTenMon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTenMon.setText("Tên món ");

        txtGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaActionPerformed(evt);
            }
        });

        lblGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGia.setText("Giá");

        TrangThaiMonAn.add(rdoConHang);
        rdoConHang.setText("Còn hàng");
        rdoConHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoConHangActionPerformed(evt);
            }
        });

        lblTrangThai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTrangThai.setText("Trạng thái");

        TrangThaiMonAn.add(rdoHetHang);
        rdoHetHang.setText("Hết hàng");
        rdoHetHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHetHangActionPerformed(evt);
            }
        });

        btnThemMonAn.setText("Thêm món ăn");
        btnThemMonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemMonAnActionPerformed(evt);
            }
        });

        btnSuaMonAn.setText("Sửa món ăn");
        btnSuaMonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaMonAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabThemMonLayout = new javax.swing.GroupLayout(tabThemMon);
        tabThemMon.setLayout(tabThemMonLayout);
        tabThemMonLayout.setHorizontalGroup(
            tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThemMonLayout.createSequentialGroup()
                .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabThemMonLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(lblTrangThai)
                        .addGap(18, 18, 18)
                        .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabThemMonLayout.createSequentialGroup()
                                .addComponent(btnThemMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSuaMonAn))
                            .addGroup(tabThemMonLayout.createSequentialGroup()
                                .addComponent(rdoConHang, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(rdoHetHang, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(tabThemMonLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lblThem_SuaMonAn)
                            .addGap(364, 364, 364))
                        .addGroup(tabThemMonLayout.createSequentialGroup()
                            .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabThemMonLayout.createSequentialGroup()
                                        .addGap(209, 209, 209)
                                        .addComponent(lblTitleThemMonAn))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabThemMonLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(lblMaMon)))
                                .addGroup(tabThemMonLayout.createSequentialGroup()
                                    .addGap(263, 263, 263)
                                    .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblGia)
                                        .addComponent(lblTenMon))))
                            .addGap(18, 18, 18)
                            .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMaMon, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(txtTenMon)
                                .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        tabThemMonLayout.setVerticalGroup(
            tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThemMonLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblThem_SuaMonAn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitleThemMonAn)
                .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabThemMonLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabThemMonLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaMon)
                            .addComponent(txtMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenMon)
                            .addComponent(txtTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGia)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTrangThai)
                            .addComponent(rdoConHang)
                            .addComponent(rdoHetHang))
                        .addGap(35, 35, 35)
                        .addGroup(tabThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThemMonAn)
                            .addComponent(btnSuaMonAn))))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        tabbedTong.addTab("Món Ăn", tabThemMon);

        tabDanhSachMon.setBackground(new java.awt.Color(255, 255, 255));
        tabDanhSachMon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblDanhSachMonAn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDanhSachMonAn.setText("Danh sách món ăn");

        btnXoaMon.setText("Xóa món");
        btnXoaMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaMonActionPerformed(evt);
            }
        });

        tblDanhSachMon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã món ăn", "Tên món ăn", "Giá tiền", "Hình ảnh", "Mã nhân viên", "Trạng thái"
            }
        ));
        tblDanhSachMon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMonMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDanhSachMonMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSachMon);

        btnTimKiemMonAn.setText("Tìm Kiếm");
        btnTimKiemMonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemMonAnActionPerformed(evt);
            }
        });

        lblFindMaMonAn.setText("Mã Món Ăn");

        javax.swing.GroupLayout tabDanhSachMonLayout = new javax.swing.GroupLayout(tabDanhSachMon);
        tabDanhSachMon.setLayout(tabDanhSachMonLayout);
        tabDanhSachMonLayout.setHorizontalGroup(
            tabDanhSachMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDanhSachMonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(tabDanhSachMonLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblDanhSachMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFindMaMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiemMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiemMonAn)
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabDanhSachMonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoaMon)
                .addGap(30, 30, 30))
        );
        tabDanhSachMonLayout.setVerticalGroup(
            tabDanhSachMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDanhSachMonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabDanhSachMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabDanhSachMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTimKiemMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTimKiemMonAn)
                        .addComponent(lblFindMaMonAn))
                    .addComponent(lblDanhSachMonAn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoaMon)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        tabbedTong.addTab("Danh sách món ăn", tabDanhSachMon);

        tabThemNhanVien.setBackground(new java.awt.Color(255, 255, 255));
        tabThemNhanVien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblThem_SuaNV.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblThem_SuaNV.setText("Thêm/ sửa nhân viên ");

        lblMaNhanVien.setText("Mã nhân viên");

        lblMatKhau.setText("Mật khẩu");

        lblTenNV.setText("Tên nhân viên");

        lblNgaySinh.setText("Ngày sinh");

        lblSdt.setText("Số điên thoại");

        ChucVu.add(rdoQL);
        rdoQL.setText("Quản lý");

        ChucVu.add(rdoNV);
        rdoNV.setText("Nhân viên");

        lblRole.setText("Chức vụ");

        btnThemNV.setText("Thêm nhân viên");
        btnThemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNVActionPerformed(evt);
            }
        });

        btnSuaNV.setText("Sửa nhân viên");
        btnSuaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabThemNhanVienLayout = new javax.swing.GroupLayout(tabThemNhanVien);
        tabThemNhanVien.setLayout(tabThemNhanVienLayout);
        tabThemNhanVienLayout.setHorizontalGroup(
            tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblThem_SuaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                                .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                                        .addComponent(btnThemNV)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSuaNV))
                                    .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                                        .addComponent(rdoQL, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rdoNV, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblMaNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(lblMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTenNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                                .addComponent(lblSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        tabThemNhanVienLayout.setVerticalGroup(
            tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThemNhanVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThem_SuaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMaNhanVien)
                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMatKhau))
                .addGap(18, 18, 18)
                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenNV))
                .addGap(14, 14, 14)
                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgaySinh))
                .addGap(18, 18, 18)
                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSdt))
                .addGap(27, 27, 27)
                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoQL)
                    .addComponent(rdoNV)
                    .addComponent(lblRole))
                .addGap(45, 45, 45)
                .addGroup(tabThemNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemNV)
                    .addComponent(btnSuaNV))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        tabbedTong.addTab("Nhân viên", tabThemNhanVien);

        tabDanhSachNhanVien.setBackground(new java.awt.Color(255, 255, 255));
        tabDanhSachNhanVien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblDanhSachNV.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDanhSachNV.setText("Danh sách nhân viên");

        tblDanhSachNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Mật khẩu", "Chức vụ", "Tên nhân viên", "Ngày sinh", "Số điện thoại"
            }
        ));
        tblDanhSachNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDanhSachNhanVienMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSachNhanVien);

        btnXoaNhanVien.setText("Xóa nhân viên");
        btnXoaNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNhanVienActionPerformed(evt);
            }
        });

        lblMaNV.setText("Mã Nhân Viên");

        btnTimKiemNV.setText("Tìm Kiếm");
        btnTimKiemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabDanhSachNhanVienLayout = new javax.swing.GroupLayout(tabDanhSachNhanVien);
        tabDanhSachNhanVien.setLayout(tabDanhSachNhanVienLayout);
        tabDanhSachNhanVienLayout.setHorizontalGroup(
            tabDanhSachNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDanhSachNhanVienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabDanhSachNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabDanhSachNhanVienLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(tabDanhSachNhanVienLayout.createSequentialGroup()
                        .addComponent(lblDanhSachNV, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKiemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTimKiemNV)
                        .addGap(31, 31, 31))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabDanhSachNhanVienLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoaNhanVien)
                .addGap(24, 24, 24))
        );
        tabDanhSachNhanVienLayout.setVerticalGroup(
            tabDanhSachNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDanhSachNhanVienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabDanhSachNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDanhSachNV, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaNV)
                    .addComponent(txtTimKiemNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemNV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoaNhanVien)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        tabbedTong.addTab("Danh sách nhân viên", tabDanhSachNhanVien);

        tabThongKeDoanhThu.setBackground(new java.awt.Color(255, 255, 255));
        tabThongKeDoanhThu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblBaoCaoThongKeDoanhThu.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblBaoCaoThongKeDoanhThu.setText("Báo cáo thống kê doanh thu");

        cboDoanhThuNgay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDoanhThuNgayItemStateChanged(evt);
            }
        });
        cboDoanhThuNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDoanhThuNgayActionPerformed(evt);
            }
        });

        cboDoanhThuThang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDoanhThuThangItemStateChanged(evt);
            }
        });
        cboDoanhThuThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDoanhThuThangActionPerformed(evt);
            }
        });

        cboDoanhThuNam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDoanhThuNamItemStateChanged(evt);
            }
        });
        cboDoanhThuNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDoanhThuNamActionPerformed(evt);
            }
        });

        tblTKDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        JScrollPane.setViewportView(tblTKDoanhThu);

        btnInTKDoanhThu.setText("In Báo Cáo");
        btnInTKDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInTKDoanhThuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabThongKeDoanhThuLayout = new javax.swing.GroupLayout(tabThongKeDoanhThu);
        tabThongKeDoanhThu.setLayout(tabThongKeDoanhThuLayout);
        tabThongKeDoanhThuLayout.setHorizontalGroup(
            tabThongKeDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThongKeDoanhThuLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblBaoCaoThongKeDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboDoanhThuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboDoanhThuThang, 0, 91, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(cboDoanhThuNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(tabThongKeDoanhThuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JScrollPane)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabThongKeDoanhThuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInTKDoanhThu)
                .addGap(39, 39, 39))
        );
        tabThongKeDoanhThuLayout.setVerticalGroup(
            tabThongKeDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThongKeDoanhThuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabThongKeDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBaoCaoThongKeDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDoanhThuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDoanhThuThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDoanhThuNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInTKDoanhThu)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        tabbedTong.addTab("Thống kê", tabThongKeDoanhThu);

        tabThongKeMonAn.setBackground(new java.awt.Color(255, 255, 255));
        tabThongKeMonAn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblBaoCaoThongKeMonAn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblBaoCaoThongKeMonAn.setText("Báo cáo thống kê món ăn");

        tblTKMonAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblTKMonAn);

        cboMonAnNgay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMonAnNgayItemStateChanged(evt);
            }
        });
        cboMonAnNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonAnNgayActionPerformed(evt);
            }
        });

        cboMonAnThang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMonAnThangItemStateChanged(evt);
            }
        });
        cboMonAnThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonAnThangActionPerformed(evt);
            }
        });

        cboMonAnNam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMonAnNamItemStateChanged(evt);
            }
        });
        cboMonAnNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonAnNamActionPerformed(evt);
            }
        });

        btnInTKMonAn.setText("In Báo Cáo");
        btnInTKMonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInTKMonAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabThongKeMonAnLayout = new javax.swing.GroupLayout(tabThongKeMonAn);
        tabThongKeMonAn.setLayout(tabThongKeMonAnLayout);
        tabThongKeMonAnLayout.setHorizontalGroup(
            tabThongKeMonAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThongKeMonAnLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblBaoCaoThongKeMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboMonAnNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(cboMonAnThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(cboMonAnNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(tabThongKeMonAnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabThongKeMonAnLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInTKMonAn)
                .addGap(38, 38, 38))
        );
        tabThongKeMonAnLayout.setVerticalGroup(
            tabThongKeMonAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabThongKeMonAnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabThongKeMonAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBaoCaoThongKeMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMonAnNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMonAnThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMonAnNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInTKMonAn)
                .addContainerGap())
        );

        tabbedTong.addTab("Thống kê", tabThongKeMonAn);

        btnTaoNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTaoNhanVien.setText("Thêm nhân viên");
        btnTaoNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoNhanVienActionPerformed(evt);
            }
        });

        btnDanhSachNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDanhSachNhanVien.setText("Danh sách nhân viên");
        btnDanhSachNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDanhSachNhanVienActionPerformed(evt);
            }
        });

        btnThongKeDoanhThu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThongKeDoanhThu.setText("Thống kê  tổng doanh thu");
        btnThongKeDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeDoanhThuActionPerformed(evt);
            }
        });

        btnBaoCaoThongKe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnBaoCaoThongKe.setText("Báo cáo thống kê");
        btnBaoCaoThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaoCaoThongKeActionPerformed(evt);
            }
        });

        btnDanhSachmon.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDanhSachmon.setText("Danh sách món");
        btnDanhSachmon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDanhSachmonActionPerformed(evt);
            }
        });

        btnThongKeMonAn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThongKeMonAn.setText("Thống kê món ăn");
        btnThongKeMonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeMonAnActionPerformed(evt);
            }
        });

        btnChuyenManHinh.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnChuyenManHinh.setText("Chuyển màn hình");
        btnChuyenManHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChuyenManHinhActionPerformed(evt);
            }
        });

        btnDangXuat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDangXuat.setText("Đăng xuất");
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnQuanLyMon, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuanLyNhanVien)
                    .addComponent(btnBaoCaoThongKe)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNekoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnDanhSachNhanVien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTaoNhanVien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTaoMon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDanhSachmon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(btnChuyenManHinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnThongKeMonAn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThongKeDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedTong)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNekoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuanLyMon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTaoMon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDanhSachmon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTaoNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDanhSachNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBaoCaoThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThongKeDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThongKeMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChuyenManHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabbedTong, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnQuanLyMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLyMonActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnQuanLyMonActionPerformed

    private void btnTaoMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMonActionPerformed
        // TODO add your handling code here:
        checkClickButton(btnTaoMon);
        tabbedTong.setSelectedIndex(0);

    }//GEN-LAST:event_btnTaoMonActionPerformed

    private void btnQuanLyNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLyNhanVienActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnQuanLyNhanVienActionPerformed

    private void btnTaoNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoNhanVienActionPerformed
        // TODO add your handling code here:
        checkClickButton(btnTaoNhanVien);
        tabbedTong.setSelectedIndex(2);
    }//GEN-LAST:event_btnTaoNhanVienActionPerformed

    private void btnThongKeDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeDoanhThuActionPerformed
        // TODO add your handling code here:
        checkClickButton(btnThongKeDoanhThu);
        tabbedTong.setSelectedIndex(4);
        tkDoanhThuNamCombobox();
        tkDoanhThuThangCombobox();
        cboDoanhThuThang.setEnabled(false);
        cboDoanhThuNgay.setEnabled(false);
        fillTableDoanhThu();
    }//GEN-LAST:event_btnThongKeDoanhThuActionPerformed

    private void btnBaoCaoThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaoCaoThongKeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBaoCaoThongKeActionPerformed

    private void btnDanhSachmonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDanhSachmonActionPerformed
        checkClickButton(btnDanhSachmon);
        tabbedTong.setSelectedIndex(1);
        fillTableFood();

    }//GEN-LAST:event_btnDanhSachmonActionPerformed

    private void rdoHetHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHetHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoHetHangActionPerformed

    private void rdoConHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoConHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoConHangActionPerformed

    private void txtGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaActionPerformed

    private void btnDanhSachNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDanhSachNhanVienActionPerformed
        // TODO add your handling code here:
        checkClickButton(btnDanhSachNhanVien);
        tabbedTong.setSelectedIndex(3);
        fillTableNV();
    }//GEN-LAST:event_btnDanhSachNhanVienActionPerformed

    private void btnThongKeMonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeMonAnActionPerformed
        checkClickButton(btnThongKeMonAn);
        tabbedTong.setSelectedIndex(5);
        tkMonAnNamCombobox();
        tkMonAnThangCombobox();
        cboMonAnNgay.setEnabled(false);
        cboMonAnThang.setEnabled(false);
        fillTableTKMonAn();

    }//GEN-LAST:event_btnThongKeMonAnActionPerformed

    private void btnChuyenManHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChuyenManHinhActionPerformed
        // TODO add your handling code here:
        if (Auth.isManager()) {
            new OrderJframe().setVisible(true);
            dispose();
        }

    }//GEN-LAST:event_btnChuyenManHinhActionPerformed

    private void lblHinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhAnhMouseClicked
        // TODO add your handling code here:
        try {
            JFileChooser fcs = new JFileChooser();
            int checkChooseFile = fcs.showOpenDialog(this);
            if (checkChooseFile == JFileChooser.APPROVE_OPTION) {
                File f = fcs.getSelectedFile();
                imageCurrent = f.getAbsolutePath();
                ImageIcon imgIcon = new ImageIcon(f.getAbsolutePath());
                Image newImg = imgIcon.getImage().getScaledInstance(lblHinhAnh.getWidth(), lblHinhAnh.getHeight(), Image.SCALE_SMOOTH);
                imgIcon = new ImageIcon(newImg);
                lblHinhAnh.setIcon(imgIcon);

            }
        } catch (Exception e) {

        }


    }//GEN-LAST:event_lblHinhAnhMouseClicked

    private void btnThemMonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemMonAnActionPerformed
        // TODO add your handling code here:
        if (validateFood()) {
            File f = new File(imageCurrent);
            FoodAndDrink newFood = new FoodAndDrink();
            newFood.setMaThucAn(txtMaMon.getText().trim());
            newFood.setTenThucAn(txtTenMon.getText().trim());
            newFood.setGia(Float.parseFloat(txtGia.getText().trim()));
            newFood.setTrangThai(rdoConHang.isSelected());
            newFood.setMaNhanVien(Auth.currentNhanVien.getMaNhanVien());

            newFood.setHinhAnh(f.getName());
            try {
                FoodDao.insert(newFood);
            } catch (Exception e) {
                DialogHelper.alert(this, "Da ton tai mon an co ma la : " + newFood.getMaThucAn());
                return;
            }

            try {
                shareHelper.saveLogo(f);
                System.out.println(f.getAbsoluteFile());
            } catch (IOException ex) {
                Logger.getLogger(quanLyJframe.class.getName()).log(Level.SEVERE, null, ex);
            }

            DialogHelper.alert(this, "Da them thanh cong !");
        }


    }//GEN-LAST:event_btnThemMonAnActionPerformed

    private void btnTimKiemMonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemMonAnActionPerformed
        // TODO add your handling code here:
        try {

            modelFoodList.setRowCount(0);
            FoodAndDrink food = FoodDao.findById(txtTimKiemMonAn.getText().trim());

            Object[] temp = {food.getMaThucAn(), food.getTenThucAn(), food.getGia(), food.getHinhAnh(), food.getMaNhanVien(), food.isTrangThai()};
            modelFoodList.addRow(temp);
        } catch (Exception e) {
        }


    }//GEN-LAST:event_btnTimKiemMonAnActionPerformed

    private void btnXoaMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaMonActionPerformed
        // TODO add your handling code here:
        try {

            int[] selectedRow = tblDanhSachMon.getSelectedRows();
            boolean checkDelete = false;

            for (int i : selectedRow) {
                String maMon = (String) tblDanhSachMon.getValueAt(i, 0);
                FoodDao.delete(maMon);
                checkDelete = true;
            }
            if (checkDelete == true) {
                DialogHelper.alert(this, "Da Xoa 1 so mon vui long kiem tra lai !");
            }
            fillTableFood();

        } catch (Exception e) {
            DialogHelper.alert(this, "Mot so mon da dung khong the  xoa !");
        }

    }//GEN-LAST:event_btnXoaMonActionPerformed

    private void btnSuaMonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaMonAnActionPerformed
        // TODO add your handling code here:
        if (validateFood()) {
            FoodAndDrink newFood = FoodDao.findById(txtMaMon.getText().trim());

            if (newFood != null) {

                File f = new File(imageCurrent);

                newFood.setMaThucAn(txtMaMon.getText().trim());
                newFood.setTenThucAn(txtTenMon.getText().trim());
                newFood.setGia(Float.parseFloat(txtGia.getText().trim()));
                newFood.setTrangThai(rdoConHang.isSelected());
                newFood.setMaNhanVien(Auth.currentNhanVien.getMaNhanVien());
                newFood.setHinhAnh(f.getName());
                FoodDao.update(newFood);
                DialogHelper.alert(this, "Da sua thanh cong !");
            } else {

                DialogHelper.alert(this, "Khong ton tai mon an de sua !");

            }
        }


    }//GEN-LAST:event_btnSuaMonAnActionPerformed

    private void tblDanhSachMonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMonMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblDanhSachMonMouseClicked

    private void tblDanhSachNhanVienMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachNhanVienMousePressed
        if (evt.getClickCount() == 2) {
            this.row = tblDanhSachNhanVien.rowAtPoint(evt.getPoint());
            fillFromNV();
        }

    }//GEN-LAST:event_tblDanhSachNhanVienMousePressed

    private void btnThemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNVActionPerformed
        if (validateNV()) {
            try {
                insertNV();
            } catch (ParseException ex) {
                Logger.getLogger(quanLyJframe.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnThemNVActionPerformed

    private void btnSuaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaNVActionPerformed
        if (validateNV()) {
            try {
                updateNV();
            } catch (ParseException ex) {
                Logger.getLogger(quanLyJframe.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSuaNVActionPerformed

    private void btnXoaNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNhanVienActionPerformed

        deleteNV();
    }//GEN-LAST:event_btnXoaNhanVienActionPerformed

    private void btnTimKiemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemNVActionPerformed
        try {
            modelNV = (DefaultTableModel) tblDanhSachNhanVien.getModel();
            modelNV.setRowCount(0);
            NhanVien nv = daonv.findById(txtTimKiemNV.getText().trim());

            Object[] temp = {nv.getMaNhanVien(), nv.getMatKhau(), nv.isRole(), nv.getTenNhanVien(), nv.getNgaySinh(), nv.getSoDienThoai()};
            modelNV.addRow(temp);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnTimKiemNVActionPerformed

    private void tblDanhSachMonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMonMousePressed
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.rowMenu = tblDanhSachMon.rowAtPoint(evt.getPoint());
            fillFormMenu();
        }
    }//GEN-LAST:event_tblDanhSachMonMousePressed

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed

        this.dispose();
        new LoginMain(this, true).setVisible(true);

    }//GEN-LAST:event_btnDangXuatActionPerformed

    private void cboDoanhThuNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDoanhThuNgayActionPerformed
        fillTableDoanhThu();
    }//GEN-LAST:event_cboDoanhThuNgayActionPerformed

    private void cboDoanhThuThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDoanhThuThangActionPerformed

    }//GEN-LAST:event_cboDoanhThuThangActionPerformed

    private void cboDoanhThuNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDoanhThuNamActionPerformed

    }//GEN-LAST:event_cboDoanhThuNamActionPerformed

    private void cboDoanhThuThangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDoanhThuThangItemStateChanged
        Object selectedItem = cboDoanhThuThang.getSelectedItem();
        String thang = null;
        if (selectedItem != null) {
            thang = selectedItem.toString();
            tkDoanhThuNgayCombobox(thang);
        }

        if (cboDoanhThuThang.getSelectedItem().equals("All")) {
            cboDoanhThuNgay.setEnabled(false);
        } else {
            cboDoanhThuNgay.setEnabled(true);
        }
        fillTableDoanhThu();
    }//GEN-LAST:event_cboDoanhThuThangItemStateChanged

    private void cboDoanhThuNgayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDoanhThuNgayItemStateChanged
        Object selectedItem = cboDoanhThuNgay.getSelectedItem();
        String ngay = null;
        if (selectedItem != null) {
            ngay = selectedItem.toString();
        }
        fillTableDoanhThu();
    }//GEN-LAST:event_cboDoanhThuNgayItemStateChanged

    private void cboDoanhThuNamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDoanhThuNamItemStateChanged
        Object selectedItem = cboDoanhThuNam.getSelectedItem();
        String nam = null;
        if (selectedItem != null) {
            nam = selectedItem.toString();
        }

        if (cboDoanhThuNam.getSelectedItem().equals("All")) {
            cboDoanhThuThang.setEnabled(false);
            cboDoanhThuNgay.setEnabled(false);
        } else {
            cboDoanhThuThang.setEnabled(true);

        }
        tkDoanhThuThangCombobox();
        fillTableDoanhThu();
    }//GEN-LAST:event_cboDoanhThuNamItemStateChanged

    private void cboMonAnNgayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMonAnNgayItemStateChanged
        Object selectedItem = cboMonAnNgay.getSelectedItem();
        String ngay = null;
        if (selectedItem != null) {
            ngay = selectedItem.toString();
        }
        fillTableTKMonAn();
    }//GEN-LAST:event_cboMonAnNgayItemStateChanged

    private void cboMonAnThangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMonAnThangItemStateChanged
        Object selectedItem = cboMonAnThang.getSelectedItem();
        String thang = null;
        if (selectedItem != null) {
            thang = selectedItem.toString();
            tkMonAnNgayCombobox(thang);
        }

        if (cboMonAnThang.getSelectedItem().equals("All")) {
            cboMonAnNgay.setEnabled(false);
        } else {
            cboMonAnNgay.setEnabled(true);
        }
        fillTableTKMonAn();
    }//GEN-LAST:event_cboMonAnThangItemStateChanged

    private void cboMonAnNamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMonAnNamItemStateChanged
        // TODO add your handling code here:
        Object selectedItem = cboMonAnNam.getSelectedItem();
        String nam = null;
        if (selectedItem != null) {
            nam = selectedItem.toString();
        }

        if (cboMonAnNam.getSelectedItem().equals("All")) {
            cboMonAnThang.setEnabled(false);
            cboMonAnNgay.setEnabled(false);
        } else {
            cboMonAnThang.setEnabled(true);
        }
        tkMonAnThangCombobox();
        fillTableTKMonAn();
    }//GEN-LAST:event_cboMonAnNamItemStateChanged

    private void cboMonAnNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonAnNgayActionPerformed
        fillTableTKMonAn();
    }//GEN-LAST:event_cboMonAnNgayActionPerformed

    private void cboMonAnThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonAnThangActionPerformed
        // TODO add your handling code here:
        Object selectedItem = cboMonAnThang.getSelectedItem();
        String thang = null;
        if (selectedItem != null) {
            thang = selectedItem.toString();
            tkMonAnNgayCombobox(thang);
        }

        if (cboMonAnThang.getSelectedItem().equals("All")) {
            cboMonAnNgay.setEnabled(false);
        } else {
            cboMonAnNgay.setEnabled(true);
        }
        fillTableTKMonAn();
    }//GEN-LAST:event_cboMonAnThangActionPerformed

    private void cboMonAnNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonAnNamActionPerformed

    }//GEN-LAST:event_cboMonAnNamActionPerformed

    private void btnInTKMonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInTKMonAnActionPerformed
        // TODO add your handling code here:
    JFileChooser fileChooser = new JFileChooser();
fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));
int option = fileChooser.showSaveDialog(null);
if (option == JFileChooser.APPROVE_OPTION) {
    File file = fileChooser.getSelectedFile();
    String filePath = file.getAbsolutePath();
    // Tiếp tục xuất dữ liệu ra Excel tại đường dẫn đã chọn
    shareHelper.exportToExcel(tblTKMonAn, filePath);
}

    }//GEN-LAST:event_btnInTKMonAnActionPerformed

    private void btnInTKDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInTKDoanhThuActionPerformed
        // TODO add your handling code here:
JFileChooser fileChooser = new JFileChooser();
fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));
int option = fileChooser.showSaveDialog(null);
if (option == JFileChooser.APPROVE_OPTION) {
    File file = fileChooser.getSelectedFile();
    String filePath = file.getAbsolutePath();
    // Tiếp tục xuất dữ liệu ra Excel tại đường dẫn đã chọn
    shareHelper.exportToExcel(tblTKDoanhThu, filePath);
}


    }//GEN-LAST:event_btnInTKDoanhThuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanLyJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanLyJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanLyJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanLyJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanLyJframe().setVisible(true);
            }
        });
    }

    // ======================= inIt ==================================  
    private void inItTab() {
        tabbedTong.setUI(new BasicTabbedPaneUI() {
            @Override
            protected int calculateTabAreaHeight(int tabPlacement, int horizRunCount, int maxTabHeight) {
                return 0; // Set the tab area height to 0
            }
        });

    }

    private void inIt() {
//        Color backgroundColor = new Color(255, 177, 55);
//        
//        btnThemMon.setBackground(backgroundColor);
            checkClickButton(btnTaoMon);
        modelFoodList = (DefaultTableModel) tblDanhSachMon.getModel();

    }

    // ======================== check click and remove  active ============================
    private void checkClickButton(JButton Button) {
        // remove active btn 

        btnTaoMon.setBackground(Color.white);

        btnDanhSachmon.setBackground(Color.white);
        btnTaoNhanVien.setBackground(Color.white);

        btnDanhSachNhanVien.setBackground(Color.white);
        btnThongKeDoanhThu.setBackground(Color.white);
        btnThongKeMonAn.setBackground(Color.white);
        Color backgroundColor = new Color(255, 177, 55);
        Button.setBackground(backgroundColor);
    }

    //======================== validate form ===================================
    public boolean validateFood() {
        String checkIdFood = "(BG|PT|IC|DR){1}\\d+";
        String checkPrice = "\\d+|\\d+\\.\\d+";
        String nameFood = txtTenMon.getText().trim();
        String IdFood = txtMaMon.getText().trim();
        String priceFood = txtGia.getText().trim();
        if (!IdFood.matches(checkIdFood)) {
            DialogHelper.alert(this, """
                                 Vui long nhap ma mon dung cu phap  ! 
                                  Burger : BG ,Potato : PT, Ice cream : IC, Drink : DR 
                                  VD: BG01 or PT01 or IC01 or DR01""");
            return false;
        }

        if (nameFood.equalsIgnoreCase("")) {
            DialogHelper.alert(this, "Vui long nhap ten mon an !");
            return false;
        }

        if (!priceFood.matches(checkPrice)) {
            DialogHelper.alert(this, """
                                     Vui long nhap tien mon an dung cu phap ! 
                                     VD : 314 or 3.14
                                     """);
            return false;

        }

        return true;
    }

    public boolean validateNV() {
        String formatNgaySinh = "\\d{1,2}[-]\\d{1,2}[-]\\d{4}";
        String MaNV = txtMaNhanVien.getText().trim();
        String TenNV = txtTenNhanVien.getText().trim();
        String MkNV = txtMatKhau.getText().trim();
        String NgaySinh = txtNgaySinh.getText().trim();
        String SDT = txtSoDienThoai.getText().trim();
        if (MaNV.equalsIgnoreCase("")) {
            DialogHelper.alert(this, "Vui long nhap Ma nhan vien !");
            return false;
        }
        if (MkNV.equalsIgnoreCase("")) {
            DialogHelper.alert(this, "Vui long nhap Mat khau !");
            return false;
        }
        if (TenNV.equalsIgnoreCase("")) {
            DialogHelper.alert(this, "Vui long nhap Ten nhan vien !");
            return false;
        }

        if (NgaySinh.equalsIgnoreCase("")) {
            DialogHelper.alert(this, "Vui long nhap Ngay sinh !");
            return false;
        }
        if (!NgaySinh.matches(formatNgaySinh)) {
            DialogHelper.alert(this, "Vui long nhap dung dinh dang dd-MM-yyyy ! ");
            return false;

        }
        if (SDT.equalsIgnoreCase("")) {
            DialogHelper.alert(this, "Vui long nhap So dien thoai !");
            return false;
        }

        return true;
    }

    //====================== fill table ================================
    public void fillTableFood() {
        modelFoodList.setRowCount(0);
        listFood = FoodDao.selectAll();
        for (FoodAndDrink food : listFood) {
            Object[] temp = {food.getMaThucAn(), food.getTenThucAn(), food.getGia(), food.getHinhAnh(), food.getMaNhanVien(), food.isTrangThai() ? "Còn Hàng" : "Hết Hàng"};
            modelFoodList.addRow(temp);

        }

    }

    public void fillTableNV() {
        listNV = daonv.selectAll();
        DefaultTableModel model = (DefaultTableModel) tblDanhSachNhanVien.getModel();
        model.setRowCount(0);
        for (NhanVien nv : listNV) {
            model.addRow(new Object[]{nv.getMaNhanVien(), nv.getMatKhau(), nv.isRole() ? "Quản lý" : "Nhân Viên", nv.getTenNhanVien(), nv.getNgaySinh(), nv.getSoDienThoai()});
        }
    }

    //====================== fill From ================================
    void fillFromNV() {
        tblDanhSachNhanVien.setRowSelectionInterval(row, row);
        try {
            String maNV = (String) tblDanhSachNhanVien.getValueAt(this.row, 0);
            NhanVien modelNV = daonv.findById(maNV);
            if (modelNV != null) {
                setFormNV(modelNV);
                tabbedTong.setSelectedIndex(2);
                checkClickButton(btnTaoNhanVien);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "lỗi truy vấn dữ liệu");
        }
    }

    void fillFormMenu() {
        tblDanhSachMon.setRowSelectionInterval(rowMenu, rowMenu);
        try {
            String maMon = (String) tblDanhSachMon.getValueAt(rowMenu, 0);
            FoodAndDrink modelFood = FoodDao.findById(maMon);
            if (modelFood != null) {
                setFormMenu(modelFood);
                tabbedTong.setSelectedIndex(0);
                checkClickButton(btnTaoMon);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }
    //====================== Set From ================================

    void setFormNV(NhanVien model) {
        txtMaNhanVien.setText(model.getMaNhanVien());
        txtMatKhau.setText(model.getMatKhau());
        txtTenNhanVien.setText(model.getTenNhanVien());
        txtNgaySinh.setText(String.valueOf(model.getNgaySinh()));
        txtSoDienThoai.setText(model.getSoDienThoai());
        if (model.isRole()) {
            rdoQL.setSelected(true);
        } else {
            rdoNV.setSelected(true);
        }

    }

    void setFormMenu(FoodAndDrink model) {
        txtMaMon.setText(model.getMaThucAn());
        txtGia.setText(String.valueOf(model.getGia()));
        txtTenMon.setText(model.getTenThucAn());

        if (model.isTrangThai()) {
            rdoConHang.setSelected(true);
        } else {
            rdoHetHang.setSelected(true);
        }
        if (!model.getHinhAnh().isEmpty()) {

            ImageIcon originalIcon = shareHelper.readLogo(model.getHinhAnh());
            Image originalImage = originalIcon.getImage();

            int labelWidth = lblHinhAnh.getWidth();
            int labelHeight = lblHinhAnh.getHeight();

            Image scaledImage = originalImage.getScaledInstance(labelWidth, labelHeight, java.awt.Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(scaledImage);

            imageCurrent = "src\\main\\resources\\logo\\" + model.getHinhAnh();

            lblHinhAnh.setIcon(scaledIcon);
            lblHinhAnh.setToolTipText(model.getHinhAnh());
        } else {
            lblHinhAnh.setIcon(null);
            lblHinhAnh.setToolTipText(null);
        }
    }

    //====================== Get From ================================
    NhanVien getFormNV() throws ParseException {
        NhanVien nv = new NhanVien();
        String ngaySinh = txtNgaySinh.getText();
        nv.setMaNhanVien(txtMaNhanVien.getText());
        nv.setMatKhau(txtMatKhau.getText());
        nv.setTenNhanVien(txtTenNhanVien.getText());
        if (DateHelper.validateDate(ngaySinh)) {
            nv.setNgaySinh(DateHelper.StringToDate(ngaySinh));
        }
        nv.setSoDienThoai(txtSoDienThoai.getText());
        if (rdoQL.isSelected()) {
            nv.setRole(true);
        } else {
            nv.setRole(false);
        }
        return nv;
    }

    FoodAndDrink getFormMenu() throws ParseException {
        FoodAndDrink fd = new FoodAndDrink();

        fd.setMaNhanVien(txtMaNhanVien.getText());
        fd.setGia(Float.parseFloat(txtGia.getText()));
        fd.setTenThucAn(txtTenMon.getText());
        fd.setHinhAnh(lblHinhAnh.getToolTipText());
        if (rdoConHang.isSelected()) {
            fd.setTrangThai(true);
        } else {
            fd.setTrangThai(false);
        }
        return fd;
    }    //====================== thêm Nhân viên ================================

    void insertNV() throws ParseException {
        NhanVien nv = getFormNV();
        String maNV = txtMaNhanVien.getText();
        try {

            daonv.insert(nv);
            this.fillTableNV();
            DialogHelper.alert(this, "Thêm thành công");
        } catch (Exception e) {
            DialogHelper.alert(this, "Thêm thất bại");
        }
    }

    //====================== sửa Nhân viên ================================
    void updateNV() throws ParseException {
        NhanVien nv = getFormNV();
        try {
            daonv.update(nv);
            this.fillTableNV();
            DialogHelper.alert(this, "Cập nhật thành công");
        } catch (Exception e) {
            DialogHelper.alert(this, "Cập nhật thất bại");
        }

    }

    //====================== xóa Nhân viên ================================
    void deleteNV() {
        row = tblDanhSachNhanVien.getSelectedRow();
        String maNV = (String) tblDanhSachNhanVien.getValueAt(row, 0);
        if (maNV.equals(Auth.currentNhanVien.getMaNhanVien())) {
            DialogHelper.alert(this, "Bạn không được xóa chính bạn!");
        } else if (DialogHelper.confirm(this, "Bạn thật sự muốn xóa nhân viên này?")) {
            try {
                daonv.delete(maNV);
                this.fillTableNV();
                DialogHelper.alert(this, "Xóa thành công!");
            } catch (Exception e) {
                DialogHelper.alert(this, "Xóa thất bại!");
            }
        }
    }

    //=====================Báo cáo thống kê===============
    //======================Năm==================
    void tkDoanhThuNamCombobox() {
        List<Integer> years = daoDH.selectYear();
        int size = years.size() + 1;
        String[] yearArray = new String[size];
        yearArray[0] = "All";
        for (int i = 1; i < size; i++) {
            yearArray[i] = years.get(i - 1).toString();
        }
        DefaultComboBoxModel<String> yearModel = new DefaultComboBoxModel<>(yearArray);
        cboDoanhThuNam.setModel(yearModel);

    }
//
//

    void tkMonAnNamCombobox() {
        List<Integer> years = daoDH.selectYear();
        int size = years.size() + 1;
        String[] yearArray = new String[size];
        yearArray[0] = "All";
        for (int i = 1; i < size; i++) {
            yearArray[i] = years.get(i - 1).toString();
        }
        DefaultComboBoxModel<String> yearModel = new DefaultComboBoxModel<>(yearArray);
        cboMonAnNam.setModel(yearModel);
    }
//
//    //=======================Tháng================

    void tkDoanhThuThangCombobox() {
        int size = 13;
        String[] monthArray = new String[size];
        monthArray[0] = "All";

        for (int i = 1; i <size; i++) {
            monthArray[i] = String.valueOf(i);
        }

        DefaultComboBoxModel<String> monthModel = new DefaultComboBoxModel<>(monthArray);
        cboDoanhThuThang.setModel(monthModel);
    }
//
//

    void tkMonAnThangCombobox() {

        int size = 13;
        String[] monthArray = new String[size];
        monthArray[0] = "All";

        for (int i = 1; i < size; i++) {
            monthArray[i] = String.valueOf(i);
        }

        DefaultComboBoxModel<String> monthModel = new DefaultComboBoxModel<>(monthArray);
        cboMonAnThang.setModel(monthModel);
    }
//
//    //=======================Ngày=================

    void tkDoanhThuNgayCombobox(String thang) {
        Integer selectedYear = null;
        Integer daysInMonth = 31;
        Integer selectedMonth = null;

        Object selectedItemNam = cboDoanhThuNam.getSelectedItem();
        if (selectedItemNam != null && !selectedItemNam.equals("All")) {
            selectedYear = Integer.parseInt(selectedItemNam.toString());
        }

        if (!thang.equals("All")) {

            selectedMonth = Integer.parseInt(thang);
            if (selectedMonth == 2) {
                // Kiểm tra năm nhuận
                if ((selectedYear % 4 == 0 && selectedYear % 100 != 0) || (selectedYear % 400 == 0)) {
                    daysInMonth = 29; // Năm nhuận
                } else {
                    daysInMonth = 28; // Không phải năm nhuận
                }
            } else if (selectedMonth == 4 || selectedMonth == 6 || selectedMonth == 9 || selectedMonth == 11) {
                daysInMonth = 30; // Các tháng có 30 ngày
            } else {
                daysInMonth = 31; // Các tháng có 31 ngày
            }

        }

        // Number of days in month + "Tất cả"
        int size = daysInMonth + 1;
        String[] dayArray = new String[size];
        dayArray[0] = "All";

        for (int i = 1; i < size; i++) {
            dayArray[i] = String.valueOf(i);
        }
        DefaultComboBoxModel<String> dayModel = new DefaultComboBoxModel<>(dayArray);
        cboDoanhThuNgay.setModel(dayModel);
    }

    void tkMonAnNgayCombobox(String thang) {
        Integer selectedYear = null;
        Integer daysInMonth = 31;
        Integer selectedMonth = null;

        Object selectedItemNam = cboMonAnNam.getSelectedItem();
        if (selectedItemNam != null && !selectedItemNam.equals("All")) {
            selectedYear = Integer.parseInt(selectedItemNam.toString());
        }

        if (!thang.equals("All")) {

            selectedMonth = Integer.parseInt(thang);
            if (selectedMonth == 2) {
                // Kiểm tra năm nhuận
                if ((selectedYear % 4 == 0 && selectedYear % 100 != 0) || (selectedYear % 400 == 0)) {
                    daysInMonth = 29; // Năm nhuận
                } else {
                    daysInMonth = 28; // Không phải năm nhuận
                }
            } else if (selectedMonth == 4 || selectedMonth == 6 || selectedMonth == 9 || selectedMonth == 11) {
                daysInMonth = 30; // Các tháng có 30 ngày
            } else {
                daysInMonth = 31; // Các tháng có 31 ngày
            }

        }

        // Number of days in month + "Tất cả"
        int size = daysInMonth + 1;
        String[] dayArray = new String[size];
        dayArray[0] = "All";

        for (int i = 1; i < size; i++) {
            dayArray[i] = String.valueOf(i);
        }
        DefaultComboBoxModel<String> dayModel = new DefaultComboBoxModel<>(dayArray);
        cboMonAnNgay.setModel(dayModel);

    }

//    //===========================FillTable==================
//
    void fillTableDoanhThu() {
        Integer nam = null;
        Integer thang = null;
        Integer ngay = null;

        Object selectedItemNam = cboDoanhThuNam.getSelectedItem();
        if (selectedItemNam != null && !selectedItemNam.equals("All")) {
            nam = Integer.parseInt(selectedItemNam.toString());
        }

        Object selectedItemThang = cboDoanhThuThang.getSelectedItem();
        if (selectedItemThang != null && !selectedItemThang.equals("All")) {
            thang = Integer.parseInt(selectedItemThang.toString());
        }

        Object selectedItemNgay = cboDoanhThuNgay.getSelectedItem();
        if (selectedItemNgay != null && !selectedItemNgay.equals("All")) {
            ngay = Integer.parseInt(selectedItemNgay.toString());
        }
        DefaultTableModel doanhThu = (DefaultTableModel) tblTKDoanhThu.getModel();
        doanhThu.setRowCount(0);
        Object[] ds = {"Doanh Thu", "Mốc Thời Gian"};
        doanhThu.setColumnIdentifiers(ds);

        List<Object[]> doanhThuList = thongKeDAO.getDoanhThu(nam, thang, ngay);
        for (Object[] row : doanhThuList) {
            doanhThu.addRow(row);
        }
    }

//
    void fillTableTKMonAn() {
        Integer nam = null;
        Integer thang = null;
        Integer ngay = null;

        Object selectedItemNam = cboMonAnNam.getSelectedItem();
        if (selectedItemNam != null && !selectedItemNam.equals("All")) {
            nam = Integer.parseInt(selectedItemNam.toString());
        }

        Object selectedItemThang = cboMonAnThang.getSelectedItem();
        if (selectedItemThang != null && !selectedItemThang.equals("All")) {
            thang = Integer.parseInt(selectedItemThang.toString());
        }

        Object selectedItemNgay = cboMonAnNgay.getSelectedItem();
        if (selectedItemNgay != null && !selectedItemNgay.equals("All")) {
            ngay = Integer.parseInt(selectedItemNgay.toString());
        }

        List<Object[]> monAnList = thongKeDAO.getDoanhThuMonAn(nam, thang, ngay);
        DefaultTableModel monAn = (DefaultTableModel) tblTKMonAn.getModel();
        monAn.setRowCount(0);
        Object[] ds = {"Mốc Thời Gian", "Mã Món Ăn", "Tên Món ăn", "Doanh Thu", "Doanh Thu (%)"};
        monAn.setColumnIdentifiers(ds);
        tblTKMonAn.setModel(monAn);

        // Đổ dữ liệu từ danh sách kết quả vào bảng
        for (Object[] row : monAnList) {
            monAn.addRow(row);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ChucVu;
    private javax.swing.JScrollPane JScrollPane;
    private javax.swing.ButtonGroup TrangThaiMonAn;
    private javax.swing.JButton btnBaoCaoThongKe;
    private javax.swing.JButton btnChuyenManHinh;
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnDanhSachNhanVien;
    private javax.swing.JButton btnDanhSachmon;
    private javax.swing.JButton btnInTKDoanhThu;
    private javax.swing.JButton btnInTKMonAn;
    private javax.swing.JButton btnQuanLyMon;
    private javax.swing.JButton btnQuanLyNhanVien;
    private javax.swing.JButton btnSuaMonAn;
    private javax.swing.JButton btnSuaNV;
    private javax.swing.JButton btnTaoMon;
    private javax.swing.JButton btnTaoNhanVien;
    private javax.swing.JButton btnThemMonAn;
    private javax.swing.JButton btnThemNV;
    private javax.swing.JButton btnThongKeDoanhThu;
    private javax.swing.JButton btnThongKeMonAn;
    private javax.swing.JButton btnTimKiemMonAn;
    private javax.swing.JButton btnTimKiemNV;
    private javax.swing.JButton btnXoaMon;
    private javax.swing.JButton btnXoaNhanVien;
    private javax.swing.JComboBox<String> cboDoanhThuNam;
    private javax.swing.JComboBox<String> cboDoanhThuNgay;
    private javax.swing.JComboBox<String> cboDoanhThuThang;
    private javax.swing.JComboBox<String> cboMonAnNam;
    private javax.swing.JComboBox<String> cboMonAnNgay;
    private javax.swing.JComboBox<String> cboMonAnThang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBaoCaoThongKeDoanhThu;
    private javax.swing.JLabel lblBaoCaoThongKeMonAn;
    private javax.swing.JLabel lblDanhSachMonAn;
    private javax.swing.JLabel lblDanhSachNV;
    private javax.swing.JLabel lblFindMaMonAn;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JLabel lblMaMon;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMaNhanVien;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblNekoIcon;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblSdt;
    private javax.swing.JLabel lblTenMon;
    private javax.swing.JLabel lblTenNV;
    private javax.swing.JLabel lblThem_SuaMonAn;
    private javax.swing.JLabel lblThem_SuaNV;
    private javax.swing.JLabel lblTitleThemMonAn;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JRadioButton rdoConHang;
    private javax.swing.JRadioButton rdoHetHang;
    private javax.swing.JRadioButton rdoNV;
    private javax.swing.JRadioButton rdoQL;
    private javax.swing.JPanel tabDanhSachMon;
    private javax.swing.JPanel tabDanhSachNhanVien;
    private javax.swing.JPanel tabThemMon;
    private javax.swing.JPanel tabThemNhanVien;
    private javax.swing.JPanel tabThongKeDoanhThu;
    private javax.swing.JPanel tabThongKeMonAn;
    private javax.swing.JTabbedPane tabbedTong;
    private javax.swing.JTable tblDanhSachMon;
    private javax.swing.JTable tblDanhSachNhanVien;
    private javax.swing.JTable tblTKDoanhThu;
    private javax.swing.JTable tblTKMonAn;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaMon;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSoDienThoai;
    private javax.swing.JTextField txtTenMon;
    private javax.swing.JTextField txtTenNhanVien;
    private javax.swing.JTextField txtTimKiemMonAn;
    private javax.swing.JTextField txtTimKiemNV;
    // End of variables declaration//GEN-END:variables
}
