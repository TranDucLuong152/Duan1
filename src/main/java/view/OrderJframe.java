/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import DAO.ChiTietDAO;
import DAO.DonHangChiTietDAO;
import DAO.DonHangDAO;
import DAO.FoodDAO;
import DAO.HoaDonDAO;
import entity.DonHang;
import entity.DonHangChiTiet;
import entity.FoodAndDrink;
import entity.HoaDon;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicTabbedPaneUI;
import javax.swing.table.DefaultTableModel;
import ulti.Auth;
import ulti.DateHelper;
import ulti.DialogHelper;
import ulti.shareHelper;
import java.lang.Double;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.Hashtable;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Thinkpad E440
 */
public class OrderJframe extends javax.swing.JFrame {

    List<FoodAndDrink> listFood = new ArrayList<>();
    HashMap<FoodAndDrink, Integer> danhSachMonAn = new HashMap<>();
    HashMap<Object, Integer> gia = new HashMap<>();
    DefaultTableModel modelTableDanhSachMonAn, modelDonHang;
    List<DonHang> listDonHang = new ArrayList<>();
    DonHangDAO donHangDao = new DonHangDAO();
    DonHangChiTietDAO chiTietDao = new DonHangChiTietDAO();
    FoodDAO foodDao = new FoodDAO();
    HoaDonDAO hoaDonDao = new HoaDonDAO();
    boolean click = false;
    private DonHang donHangCurrent;
    int index = -1;

    /**
     * Creates new form Order
     */
    public OrderJframe() {
        initComponents();
        inItTab();
        inItTable();

        readAndFillFood();
        setLocationRelativeTo(this);
        this.setTitle("Màn hình Order");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnTaoDon = new javax.swing.JButton();
        btnPotato = new javax.swing.JButton();
        btnCream = new javax.swing.JButton();
        btnBurger = new javax.swing.JButton();
        lblIconNeko2 = new javax.swing.JLabel();
        btnDrink = new javax.swing.JButton();
        btnListDonHang = new javax.swing.JButton();
        btnLichSu = new javax.swing.JButton();
        tabbedTong = new javax.swing.JTabbedPane();
        tabTaoDonHang = new javax.swing.JPanel();
        tbpSub = new javax.swing.JTabbedPane();
        tabBurger = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelContainerBurger = new javax.swing.JPanel();
        tabPotato = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        panelContainerPotato = new javax.swing.JPanel();
        tabCream = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelContainerCream = new javax.swing.JPanel();
        tabDrink = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        panelContainerDrink = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDonHang = new javax.swing.JTable();
        lblDSMonThuocDonHang = new javax.swing.JLabel();
        lblThanhTien = new javax.swing.JLabel();
        lblTongTienDonHang = new javax.swing.JLabel();
        btnThemDonHang = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnXoaMon = new javax.swing.JButton();
        btnHuyDon = new javax.swing.JButton();
        btnInHoaDon = new javax.swing.JButton();
        TabListDonHang = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        panelContainerDonHang = new javax.swing.JPanel();
        tabLichSu = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnChiTietDonHang = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblLichSuHD = new javax.swing.JTable();
        txtTimKiemDonHang = new javax.swing.JTextField();
        btnTimKiemDonHang = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblTitleChiTietDonHang = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblChiTietDonHang = new javax.swing.JTable();
        lblTitleTongTien = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Jpanel_HoaDon = new javax.swing.JPanel();
        btnThanhToanDonHang1 = new javax.swing.JButton();
        btnChuyenManHinh = new javax.swing.JButton();
        btnDangXuat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnTaoDon.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTaoDon.setText("Tạo đơn hàng");
        btnTaoDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoDonActionPerformed(evt);
            }
        });

        btnPotato.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPotato.setText("Potato");
        btnPotato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPotatoActionPerformed(evt);
            }
        });

        btnCream.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCream.setText("Ice Cream");
        btnCream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreamActionPerformed(evt);
            }
        });

        btnBurger.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnBurger.setText("Burger");
        btnBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBurgerActionPerformed(evt);
            }
        });

        lblIconNeko2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo_brand.png"))); // NOI18N

        btnDrink.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDrink.setText("Drink");
        btnDrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrinkActionPerformed(evt);
            }
        });

        btnListDonHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnListDonHang.setText("Danh sách đơn hàng");
        btnListDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListDonHangActionPerformed(evt);
            }
        });

        btnLichSu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnLichSu.setText("Lịch sử đơn hàng");
        btnLichSu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLichSuActionPerformed(evt);
            }
        });

        tabbedTong.setBackground(new java.awt.Color(153, 153, 255));
        tabbedTong.setEnabled(false);

        tabTaoDonHang.setBackground(new java.awt.Color(255, 255, 255));

        tbpSub.setEnabled(false);

        tabBurger.setBackground(new java.awt.Color(255, 255, 255));
        tabBurger.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(312, 1500));

        panelContainerBurger.setBackground(new java.awt.Color(255, 255, 255));
        panelContainerBurger.setName(""); // NOI18N
        panelContainerBurger.setPreferredSize(new java.awt.Dimension(300, 1500));
        panelContainerBurger.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jScrollPane1.setViewportView(panelContainerBurger);

        javax.swing.GroupLayout tabBurgerLayout = new javax.swing.GroupLayout(tabBurger);
        tabBurger.setLayout(tabBurgerLayout);
        tabBurgerLayout.setHorizontalGroup(
            tabBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabBurgerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabBurgerLayout.setVerticalGroup(
            tabBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabBurgerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpSub.addTab("tab1", tabBurger);

        tabPotato.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setPreferredSize(new java.awt.Dimension(312, 1500));

        panelContainerPotato.setBackground(new java.awt.Color(255, 255, 255));
        panelContainerPotato.setName(""); // NOI18N
        panelContainerPotato.setPreferredSize(new java.awt.Dimension(300, 1500));
        panelContainerPotato.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jScrollPane3.setViewportView(panelContainerPotato);

        javax.swing.GroupLayout tabPotatoLayout = new javax.swing.GroupLayout(tabPotato);
        tabPotato.setLayout(tabPotatoLayout);
        tabPotatoLayout.setHorizontalGroup(
            tabPotatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabPotatoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabPotatoLayout.setVerticalGroup(
            tabPotatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabPotatoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpSub.addTab("tab3", tabPotato);

        tabCream.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setPreferredSize(new java.awt.Dimension(312, 1500));

        panelContainerCream.setBackground(new java.awt.Color(255, 255, 255));
        panelContainerCream.setName(""); // NOI18N
        panelContainerCream.setPreferredSize(new java.awt.Dimension(300, 1500));
        panelContainerCream.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jScrollPane4.setViewportView(panelContainerCream);

        javax.swing.GroupLayout tabCreamLayout = new javax.swing.GroupLayout(tabCream);
        tabCream.setLayout(tabCreamLayout);
        tabCreamLayout.setHorizontalGroup(
            tabCreamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabCreamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabCreamLayout.setVerticalGroup(
            tabCreamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabCreamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpSub.addTab("tab2", tabCream);

        tabDrink.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setPreferredSize(new java.awt.Dimension(312, 1500));

        panelContainerDrink.setBackground(new java.awt.Color(255, 255, 255));
        panelContainerDrink.setName(""); // NOI18N
        panelContainerDrink.setPreferredSize(new java.awt.Dimension(300, 1500));
        panelContainerDrink.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jScrollPane5.setViewportView(panelContainerDrink);

        javax.swing.GroupLayout tabDrinkLayout = new javax.swing.GroupLayout(tabDrink);
        tabDrink.setLayout(tabDrinkLayout);
        tabDrinkLayout.setHorizontalGroup(
            tabDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabDrinkLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabDrinkLayout.setVerticalGroup(
            tabDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabDrinkLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbpSub.addTab("tab4", tabDrink);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(153, 153, 153)));

        tblDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Tên món", "Số lượng", "Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDonHang);
        if (tblDonHang.getColumnModel().getColumnCount() > 0) {
            tblDonHang.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblDonHang.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblDonHang.getColumnModel().getColumn(2).setPreferredWidth(90);
        }

        lblDSMonThuocDonHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDSMonThuocDonHang.setText("Danh Sách món :");

        lblThanhTien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThanhTien.setText("Thành tiền :");

        lblTongTienDonHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTongTienDonHang.setText("1000000$");

        btnThemDonHang.setText("Tạo đơn");
        btnThemDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemDonHangActionPerformed(evt);
            }
        });

        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setEnabled(false);
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnXoaMon.setText("Xoá món");
        btnXoaMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaMonActionPerformed(evt);
            }
        });

        btnHuyDon.setText("Huỷ đơn");
        btnHuyDon.setEnabled(false);
        btnHuyDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyDonActionPerformed(evt);
            }
        });

        btnInHoaDon.setText("Hóa đơn");
        btnInHoaDon.setEnabled(false);
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lblDSMonThuocDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(lblThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(lblTongTienDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(btnThemDonHang)))))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnCapNhat)
                                .addGap(51, 51, 51)
                                .addComponent(btnXoaMon))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(btnHuyDon, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDSMonThuocDonHang)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThanhTien)
                    .addComponent(lblTongTienDonHang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemDonHang)
                    .addComponent(btnCapNhat)
                    .addComponent(btnLamMoi)
                    .addComponent(btnXoaMon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHuyDon)
                    .addComponent(btnInHoaDon))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tabTaoDonHangLayout = new javax.swing.GroupLayout(tabTaoDonHang);
        tabTaoDonHang.setLayout(tabTaoDonHangLayout);
        tabTaoDonHangLayout.setHorizontalGroup(
            tabTaoDonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTaoDonHangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbpSub, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabTaoDonHangLayout.setVerticalGroup(
            tabTaoDonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabTaoDonHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabTaoDonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tbpSub))
                .addContainerGap())
        );

        tabbedTong.addTab("tab1", tabTaoDonHang);

        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane7.setPreferredSize(new java.awt.Dimension(312, 1500));

        panelContainerDonHang.setBackground(new java.awt.Color(255, 255, 255));
        panelContainerDonHang.setName(""); // NOI18N
        panelContainerDonHang.setPreferredSize(new java.awt.Dimension(300, 1500));
        panelContainerDonHang.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jScrollPane7.setViewportView(panelContainerDonHang);

        javax.swing.GroupLayout TabListDonHangLayout = new javax.swing.GroupLayout(TabListDonHang);
        TabListDonHang.setLayout(TabListDonHangLayout);
        TabListDonHangLayout.setHorizontalGroup(
            TabListDonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TabListDonHangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
                .addContainerGap())
        );
        TabListDonHangLayout.setVerticalGroup(
            TabListDonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TabListDonHangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedTong.addTab("tab2", TabListDonHang);

        tabLichSu.setBackground(new java.awt.Color(255, 255, 255));
        tabLichSu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnChiTietDonHang.setText("Chi tiết đơn hàng");
        btnChiTietDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTietDonHangActionPerformed(evt);
            }
        });

        tblLichSuHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã DH", "Ngày tạo", "Mã NV", "Trạng thái"
            }
        ));
        tblLichSuHD.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblLichSuHDAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblLichSuHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLichSuHDMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblLichSuHD);

        btnTimKiemDonHang.setText("Tìm kiếm");
        btnTimKiemDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemDonHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnChiTietDonHang)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(txtTimKiemDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(btnTimKiemDonHang)
                .addGap(19, 19, 19))
            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiemDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemDonHang))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChiTietDonHang)
                .addContainerGap())
        );

        lblTitleChiTietDonHang.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitleChiTietDonHang.setText("Chi tiết đơn hàng");

        tblChiTietDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaDH", "Ngày tạo", "MaNV", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jScrollPane8.setViewportView(tblChiTietDonHang);

        lblTitleTongTien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTitleTongTien.setText("Tổng tiền: ");

        lblTongTien.setText("1000000 VND");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblTitleChiTietDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(389, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTitleTongTien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblTitleChiTietDonHang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitleTongTien)
                    .addComponent(lblTongTien))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tabLichSuLayout = new javax.swing.GroupLayout(tabLichSu);
        tabLichSu.setLayout(tabLichSuLayout);
        tabLichSuLayout.setHorizontalGroup(
            tabLichSuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabLichSuLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabLichSuLayout.setVerticalGroup(
            tabLichSuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabbedTong.addTab("tab3", tabLichSu);

        javax.swing.GroupLayout Jpanel_HoaDonLayout = new javax.swing.GroupLayout(Jpanel_HoaDon);
        Jpanel_HoaDon.setLayout(Jpanel_HoaDonLayout);
        Jpanel_HoaDonLayout.setHorizontalGroup(
            Jpanel_HoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        Jpanel_HoaDonLayout.setVerticalGroup(
            Jpanel_HoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );

        btnThanhToanDonHang1.setText("Thanh toán");
        btnThanhToanDonHang1.setEnabled(false);
        btnThanhToanDonHang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanDonHang1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jpanel_HoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(808, Short.MAX_VALUE)
                .addComponent(btnThanhToanDonHang1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Jpanel_HoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThanhToanDonHang1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabbedTong.addTab("tab4", jPanel2);

        btnChuyenManHinh.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnChuyenManHinh.setText("Chuyển màn hình");
        btnChuyenManHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChuyenManHinhActionPerformed(evt);
            }
        });

        btnDangXuat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDangXuat.setText("Đăng xuất");
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnDangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnLichSu, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lblIconNeko2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnDrink, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnBurger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPotato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCream, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(btnTaoDon, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnChuyenManHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnListDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedTong))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblIconNeko2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTaoDon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPotato, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCream, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(btnListDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLichSu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnChuyenManHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(tabbedTong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLichSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLichSuActionPerformed
        // TODO add your handling code here:
        removeColorAllButton();
        removeColorAllButtonSub();
        blockOrder(true);
        checkClickButton(btnLichSu);
        tabbedTong.setSelectedIndex(2);
        fillTableLichSu();
    }//GEN-LAST:event_btnLichSuActionPerformed

    private void btnCreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreamActionPerformed
        // TODO add your handling code here:
        removeColorAllButtonSub();
        checkClickButton(btnCream);
        tbpSub.setSelectedIndex(2);
    }//GEN-LAST:event_btnCreamActionPerformed

    private void btnDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrinkActionPerformed
        // TODO add your handling code here:
        removeColorAllButtonSub();
        checkClickButton(btnDrink);
        tbpSub.setSelectedIndex(3);
    }//GEN-LAST:event_btnDrinkActionPerformed

    private void btnListDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListDonHangActionPerformed
        // TODO add your handling code here:
        removeColorAllButton();
        removeColorAllButtonSub();
        blockOrder(true);
        checkClickButton(btnListDonHang);
        fillDonHangChuaThanhToan();
        tabbedTong.setSelectedIndex(1);
    }//GEN-LAST:event_btnListDonHangActionPerformed

    private void btnPotatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPotatoActionPerformed
        // TODO add your handling code here:
        removeColorAllButtonSub();
        checkClickButton(btnPotato);
        tbpSub.setSelectedIndex(1);
    }//GEN-LAST:event_btnPotatoActionPerformed

    private void btnBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBurgerActionPerformed
        // TODO add your handling code here:

        removeColorAllButtonSub();
        checkClickButton(btnBurger);
        tbpSub.setSelectedIndex(0);
    }//GEN-LAST:event_btnBurgerActionPerformed

    private void btnTaoDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoDonActionPerformed
        // TODO add your handling code here:
        removeColorAllButton();
        checkClickButton(btnTaoDon);
        blockOrder(false);
        tabbedTong.setSelectedIndex(0);
    }//GEN-LAST:event_btnTaoDonActionPerformed

    private void btnChuyenManHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChuyenManHinhActionPerformed
        // TODO add your handling code here:

        if (Auth.isManager()) {
            new quanLyJframe().setVisible(true);
            dispose();
        } else {
            DialogHelper.alert(this, "Chi quan ly moi duoc phep dung !");

        }

    }//GEN-LAST:event_btnChuyenManHinhActionPerformed

    private void btnThemDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDonHangActionPerformed
        // TODO add your handling code here:
        if (danhSachMonAn.isEmpty()) {
            DialogHelper.alert(this, "Vui long kiem tra lai don hang !");
        } else {
            addOrder();
        }

    }//GEN-LAST:event_btnThemDonHangActionPerformed

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed
        this.dispose();
        new LoginMain(this, true).setVisible(true);


    }//GEN-LAST:event_btnDangXuatActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        clearDonHang();

    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnXoaMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaMonActionPerformed
        // TODO add your handling code here:
        int[] selected = tblDonHang.getSelectedRows();
        for (int i : selected) {
            FoodAndDrink foodTemp = (FoodAndDrink) tblDonHang.getValueAt(i, 0);
            danhSachMonAn.remove(foodTemp);

        }

        fillTable();

    }//GEN-LAST:event_btnXoaMonActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        if (danhSachMonAn.isEmpty()) {
            DialogHelper.alert(this, "Vui long kiem tra lai danh sach mon !");
        } else {

            Set<FoodAndDrink> key = danhSachMonAn.keySet();
            chiTietDao.deleteMaDonHang(donHangCurrent.getMaDonHang());

            for (FoodAndDrink foodAndDrink : key) {
                DonHangChiTiet chiTietTemp = new DonHangChiTiet();
                chiTietTemp.setMaDonHang(donHangCurrent.getMaDonHang());
                chiTietTemp.setMaMonAn(foodAndDrink.getMaThucAn());
                chiTietTemp.setSoLuong(danhSachMonAn.get(foodAndDrink));
                chiTietDao.insert(chiTietTemp);

            }

            DialogHelper.alert(this, "Da tao cap nhat !");

            fillTable();
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnHuyDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyDonActionPerformed
        // TODO add your handling code here:
        donHangCurrent.setTrangThai("Da Huy");
        donHangDao.update(donHangCurrent);
        clearDonHang();

    }//GEN-LAST:event_btnHuyDonActionPerformed

    private void btnChiTietDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietDonHangActionPerformed
        index = tblLichSuHD.getSelectedRow();
        if (index == -1) {
            DialogHelper.alert(this, "Chọn đơn hàng cần xem!");
        } else {

            int maDH = (int) tblLichSuHD.getValueAt(index, 0);
            fillChiTietDonHang(maDH);
            index = -1;
        }
    }//GEN-LAST:event_btnChiTietDonHangActionPerformed

    private void btnTimKiemDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemDonHangActionPerformed
        try {
            modelDonHang = (DefaultTableModel) tblLichSuHD.getModel();
            modelDonHang.setRowCount(0);
            DonHang dh = donHangDao.findById(txtTimKiemDonHang.getText().trim());

            Object[] temp = {dh.getMaDonHang(), dh.getNgayTao(), dh.getMaNhanVien(), dh.getTrangThai()};
            modelDonHang.addRow(temp);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnTimKiemDonHangActionPerformed

    private void tblLichSuHDAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblLichSuHDAncestorAdded

    }//GEN-LAST:event_tblLichSuHDAncestorAdded

    private void tblLichSuHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLichSuHDMouseClicked

    }//GEN-LAST:event_tblLichSuHDMouseClicked

    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
        try {
            // TODO add your handling code here:
            donHangCurrent.setTrangThai("Chua Thanh Toan");
            donHangDao.update(donHangCurrent);
            HoaDon newHoaDon = new HoaDon();
            newHoaDon.setMaDonHang(donHangCurrent.getMaDonHang());
            newHoaDon.setNgayTao(DateHelper.GetDateNow());
            newHoaDon.setTrangThai("Chua Thanh Toan");
            newHoaDon.setMaNhanVien(Auth.currentNhanVien.getMaNhanVien());
            hoaDonDao.insert(newHoaDon);
            InHoaDon(donHangCurrent.getMaDonHang());

            tabbedTong.setSelectedIndex(3);

        } catch (Exception ex) {
            Logger.getLogger(OrderJframe.class.getName()).log(Level.SEVERE, null, ex);
        }
        tabbedTong.setSelectedIndex(3);
    }//GEN-LAST:event_btnInHoaDonActionPerformed

    private void btnThanhToanDonHang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanDonHang1ActionPerformed
        try {
            // TODO add your handling code here:
            donHangCurrent.setTrangThai("Da Thanh Toan");
            donHangDao.update(donHangCurrent);

            HoaDon newHoaDon = new HoaDon();
            newHoaDon.setMaDonHang(donHangCurrent.getMaDonHang());
            newHoaDon.setNgayTao(DateHelper.GetDateNow());
            newHoaDon.setTrangThai("Da Thanh Toan");
            newHoaDon.setMaNhanVien(Auth.currentNhanVien.getMaNhanVien());
            hoaDonDao.insert(newHoaDon);

            DialogHelper.alert(this, "Da hoan tat !");

            clearDonHang();
            removeColorAllButton();
            removeColorAllButtonSub();
            blockOrder(true);
            checkClickButton(btnLichSu);
            tabbedTong.setSelectedIndex(2);
            fillDonHangChuaThanhToan();
            fillTableLichSu();
        } catch (ParseException ex) {
            Logger.getLogger(OrderJframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThanhToanDonHang1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderJframe().setVisible(true);
            }
        });
    }

    private void inItTab() {
        tabbedTong.setUI(new BasicTabbedPaneUI() {
            @Override
            protected int calculateTabAreaHeight(int tabPlacement, int horizRunCount, int maxTabHeight) {
                return 0; // Set the tab area height to 0
            }
        });

        tbpSub.setUI(new BasicTabbedPaneUI() {
            @Override
            protected int calculateTabAreaHeight(int tabPlacement, int horizRunCount, int maxTabHeight) {
                return 0; // Set the tab area height to 0
            }
        });

        removeColorAllButton();
        removeColorAllButtonSub();
        Color backgroundColor = new Color(255, 177, 55);
        btnTaoDon.setBackground(backgroundColor);
    }
    //============= clear form don hang =============

    private void clearDonHang() {
        danhSachMonAn.clear();
        btnThanhToanDonHang1.setEnabled(false);
        btnInHoaDon.setEnabled(false);
        btnCapNhat.setEnabled(false);
        btnThemDonHang.setEnabled(true);
        btnHuyDon.setEnabled(false);
        fillTable();

    }
    //==================== in it  =============

    private void inItTable() {
        modelTableDanhSachMonAn = (DefaultTableModel) tblDonHang.getModel();

    }

    //  =========================== fill table =================================
    private void fillTable() {
        modelTableDanhSachMonAn.setRowCount(0);
        Set<FoodAndDrink> key = danhSachMonAn.keySet();
        float tongTien = 0;
        for (FoodAndDrink f : key) {
            float gia = f.getGia() * danhSachMonAn.get(f);
            int soLuongMon = danhSachMonAn.get(f);
            Object[] temp = {f, soLuongMon, f.getGia()};
            modelTableDanhSachMonAn.addRow(temp);
            tongTien += gia;

        }
        lblTongTienDonHang.setText(tongTien + "$");

    }

    // ========================== check and block active button ================
    private void checkClickButton(JButton Button) {

        Color backgroundColor = new Color(255, 177, 55);
        Button.setBackground(backgroundColor);
    }

    private void removeColorAllButton() {
        btnTaoDon.setBackground(Color.white);
        btnListDonHang.setBackground(Color.white);
        btnLichSu.setBackground(Color.white);
    }

    private void removeColorAllButtonSub() {
        btnBurger.setBackground(Color.white);
        btnPotato.setBackground(Color.white);
        btnDrink.setBackground(Color.white);
        btnCream.setBackground(Color.white);
    }

    private void blockOrder(Boolean check) {
        btnBurger.setEnabled(!check);
        btnPotato.setEnabled(!check);
        btnCream.setEnabled(!check);
        btnDrink.setEnabled(!check);

    }

    // ================================ add panel food ==============================
    private void readAndFillFood() {
        listFood = foodDao.selectDangBan();
        for (FoodAndDrink foodAndDrink : listFood) {

            if (foodAndDrink.getMaThucAn().startsWith("BG")) {
                panelContainerBurger.add(ClonePanelFood(foodAndDrink));

            }
            if (foodAndDrink.getMaThucAn().startsWith("IC")) {
                panelContainerCream.add(ClonePanelFood(foodAndDrink));

            }
            if (foodAndDrink.getMaThucAn().startsWith("PT")) {
                panelContainerPotato.add(ClonePanelFood(foodAndDrink));

            }
            if (foodAndDrink.getMaThucAn().startsWith("DR")) {
                panelContainerDrink.add(ClonePanelFood(foodAndDrink));

            }

        }

    }

    //==================== fill donhang chua thanh toan =======================
    private void fillDonHangChuaThanhToan() {
        panelContainerDonHang.removeAll();
        List<DonHang> listDonHangChuaThanhToan = donHangDao.selectChuaThanhToan();
        for (DonHang donHang : listDonHangChuaThanhToan) {
            panelContainerDonHang.add(clonePanelOrder(donHang));

        }

    }

//=================================clone panel ===============================
    //  ==================  clone panel food ==========================
    private JPanel ClonePanelFood(FoodAndDrink food) {

        JPanel panelReturn = new JPanel();
        FlowLayout layout = new FlowLayout();
        panelReturn.setLayout(layout);

        JLabel nameFood = new JLabel(food.getTenThucAn());

        Dimension sizePanelName = new Dimension(100, 22);
        JPanel namePanelFood = new JPanel();
        namePanelFood.setPreferredSize(sizePanelName);
        namePanelFood.add(nameFood);
//        namePanelFood.setBackground(Color.red);

        Dimension sizePanel = new Dimension(111, 165);
        panelReturn.setPreferredSize(sizePanel);

        Dimension sizeLabel = new Dimension(100, 100);
        JLabel label = new JLabel();
        label.setPreferredSize(sizeLabel);
        JButton btn = new JButton();

        AbstractAction ac = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!danhSachMonAn.containsKey(food)) {
                    danhSachMonAn.put(food, 1);
                } else {
                    int soLuongCu = danhSachMonAn.get(food);
                    danhSachMonAn.replace(food, soLuongCu, soLuongCu + 1);

                }

                System.out.println(danhSachMonAn.toString());
                fillTable();
            }
        };

        btn.setAction(ac);
        btn.setText("Add");

        label.setIcon(shareHelper.readLogo(food.getHinhAnh())); // NOI18N

        panelReturn.add(label);
        panelReturn.add(namePanelFood);
        panelReturn.add(btn);

        return panelReturn;
    }

    //============================== clone panel order =================================
    private JPanel clonePanelOrder(DonHang donHang) {

        GridLayout layout = new GridLayout(3, 1);
        JPanel panelReturn = new JPanel(layout);
        Dimension sizePanel = new Dimension(150, 150);
        panelReturn.setPreferredSize(sizePanel);

        JLabel lblMaDon = new JLabel("Ma Don Hang : " + donHang.getMaDonHang());
        JLabel lblNguoiTao = new JLabel("Nguoi Tao : " + donHang.getMaNhanVien());

        JButton btnThanhToan = new JButton();

        AbstractAction ac = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                readFoodFromDonHang(String.valueOf(donHang.getMaDonHang()));
                blockOrder(false);
                removeColorAllButton();
                removeColorAllButtonSub();
                checkClickButton(btnBurger);
                tabbedTong.setSelectedIndex(0);
                tbpSub.setSelectedIndex(0);
                btnCapNhat.setEnabled(true);
                btnThanhToanDonHang1.setEnabled(true);
                btnInHoaDon.setEnabled(true);
                btnThemDonHang.setEnabled(false);
                btnHuyDon.setEnabled(true);
                donHangCurrent = donHang;

                Set<FoodAndDrink> key = danhSachMonAn.keySet();
                for (FoodAndDrink foodAndDrink : key) {
                    System.out.println(foodAndDrink);

                }

            }
        };

        btnThanhToan.setAction(ac);
        btnThanhToan.setText("Thanh Toan");
        panelReturn.add(lblMaDon);
        panelReturn.add(lblNguoiTao);
        panelReturn.add(btnThanhToan);

        return panelReturn;
    }

    // ======================  read  food in order================
    private void readFoodFromDonHang(String maDonHang) {
        danhSachMonAn.clear();
        HashMap<String, Integer> listFoodTemp = chiTietDao.selectFoodFromOrder(maDonHang);
        Set<String> maMonAnFromListFoodTemp = listFoodTemp.keySet();
        for (String maMonAn : maMonAnFromListFoodTemp) {
            FoodAndDrink food = foodDao.findById(maMonAn);
            danhSachMonAn.put(food, listFoodTemp.get(maMonAn));

        }

        fillTable();

    }

    // ========================= add order =======================
    private void addOrder() {
        try {
            DonHang donHangTemp = new DonHang();
            donHangTemp.setNgayTao(DateHelper.GetDateNow());
            donHangTemp.setMaNhanVien(Auth.currentNhanVien.getMaNhanVien());
            donHangTemp.setTrangThai("Chua Thanh Toan");
            donHangDao.insert(donHangTemp);
            donHangTemp = donHangDao.selectLast();
            System.out.println(donHangTemp.getMaDonHang());
            // ========== add note order  ======
            Set<FoodAndDrink> key = danhSachMonAn.keySet();

            for (FoodAndDrink foodAndDrink : key) {
                DonHangChiTiet chiTietTemp = new DonHangChiTiet();
                chiTietTemp.setMaDonHang(donHangTemp.getMaDonHang());
                chiTietTemp.setMaMonAn(foodAndDrink.getMaThucAn());
                chiTietTemp.setSoLuong(danhSachMonAn.get(foodAndDrink));
                chiTietDao.insert(chiTietTemp);
            }

            DialogHelper.alert(this, "Da tao don hang !");
            danhSachMonAn.clear();
            fillTable();

        } catch (ParseException ex) {
            Logger.getLogger(OrderJframe.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void fillTableLichSu() {
        listDonHang = donHangDao.selectDaThanhToan();
        DefaultTableModel model = (DefaultTableModel) tblLichSuHD.getModel();
        model.setRowCount(0);
        for (DonHang dh : listDonHang) {
            model.addRow(new Object[]{dh.getMaDonHang(), dh.getNgayTao(), dh.getMaNhanVien(), dh.getTrangThai()});
        }

    }

    void fillChiTietDonHang(int MaDH) {
        float tongtien = 0;

        ChiTietDAO CTDAO = new ChiTietDAO();
        DefaultTableModel model = (DefaultTableModel) tblChiTietDonHang.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);
        String[] colunms = {"MaDH", "Số lượng", "Ngày Tạo", "MaNV", "Tên món", "Thành tiền", "Trạng thái"};
        for (String colunm : colunms) {
            model.addColumn(colunm);
        }
        try {

            List<Object[]> list = CTDAO.getChiTiet(MaDH);
//            List<Object> listTien = new ArrayList<>();

            for (Object[] row : list) {
                model.addRow(row);
            }
            for (int i = 0; i < list.size(); i++) {
                tongtien += Float.valueOf(String.valueOf(model.getValueAt(i, 5)));

            }
            lblTongTien.setText(String.valueOf(tongtien) + "VND");

        } catch (Exception e) {
            System.out.println(e);
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu !");

        }
    }

    void InHoaDon(int maHD) {
        try {
            String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
            String url = "jdbc:sqlserver://localhost:1433;databaseName=nekodelivery";
            String user = "sa";
            String passSQL = "123";
            Connection con = DriverManager.getConnection(url, user, passSQL);
            HashMap map = new HashMap();
            map.put("sMaHD", maHD);
            System.out.println(map);

            Jpanel_HoaDon.removeAll();
            Jpanel_HoaDon.repaint();
            Jpanel_HoaDon.revalidate();

            JasperDesign jdesign = JRXmlLoader.load("src\\main\\java\\Report\\XuatHoaDon.jrxml");
            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
            JasperPrint jprint = JasperFillManager.fillReport(jreport, map, con);
            JRViewer v = new JRViewer(jprint);

            Jpanel_HoaDon.setLayout(new BorderLayout());
            Jpanel_HoaDon.add(v);

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Jpanel_HoaDon;
    private javax.swing.JPanel TabListDonHang;
    private javax.swing.JButton btnBurger;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnChiTietDonHang;
    private javax.swing.JButton btnChuyenManHinh;
    private javax.swing.JButton btnCream;
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnDrink;
    private javax.swing.JButton btnHuyDon;
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLichSu;
    private javax.swing.JButton btnListDonHang;
    private javax.swing.JButton btnPotato;
    private javax.swing.JButton btnTaoDon;
    private javax.swing.JButton btnThanhToanDonHang1;
    private javax.swing.JButton btnThemDonHang;
    private javax.swing.JButton btnTimKiemDonHang;
    private javax.swing.JButton btnXoaMon;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblDSMonThuocDonHang;
    private javax.swing.JLabel lblIconNeko2;
    private javax.swing.JLabel lblThanhTien;
    private javax.swing.JLabel lblTitleChiTietDonHang;
    private javax.swing.JLabel lblTitleTongTien;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTongTienDonHang;
    private javax.swing.JPanel panelContainerBurger;
    private javax.swing.JPanel panelContainerCream;
    private javax.swing.JPanel panelContainerDonHang;
    private javax.swing.JPanel panelContainerDrink;
    private javax.swing.JPanel panelContainerPotato;
    private javax.swing.JPanel tabBurger;
    private javax.swing.JPanel tabCream;
    private javax.swing.JPanel tabDrink;
    private javax.swing.JPanel tabLichSu;
    private javax.swing.JPanel tabPotato;
    private javax.swing.JPanel tabTaoDonHang;
    private javax.swing.JTabbedPane tabbedTong;
    private javax.swing.JTable tblChiTietDonHang;
    private javax.swing.JTable tblDonHang;
    private javax.swing.JTable tblLichSuHD;
    private javax.swing.JTabbedPane tbpSub;
    private javax.swing.JTextField txtTimKiemDonHang;
    // End of variables declaration//GEN-END:variables

}
